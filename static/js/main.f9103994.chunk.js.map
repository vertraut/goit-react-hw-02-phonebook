{"version":3,"sources":["Component/Section/Section.js","Component/Form/Form.js","Component/ContactsList/ContactsList.js","Component/Phonebook/Phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["Section","title","children","Form","state","name","phone","handleInputChange","currentTarget","value","setState","handleSubmit","e","preventDefault","props","addContact","onSubmit","this","type","onChange","Component","ContactsList","contacts","length","map","id","Phonebook","uuidv4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAQeA,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACGD,GAAS,6BAAKA,IACdC,M,OCHgBC,E,4MACnBC,MAAQ,CACNC,KAAM,2BACNC,MAAO,iB,EAGTC,kBAAoB,YAAwB,IAArBC,EAAoB,EAApBA,cACbH,EAAgBG,EAAhBH,KAAMI,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKX,Q,uDAI3B,OACE,uBAAMY,SAAUC,KAAKN,aAArB,UACE,yCAEE,uBACEO,KAAK,OACLb,KAAK,OACLI,MAAOQ,KAAKb,MAAMC,KAClBc,SAAUF,KAAKV,uBAGnB,uBACA,iDAEE,uBACEW,KAAK,MACLb,KAAK,QACLI,MAAOQ,KAAKb,MAAME,MAClBa,SAAUF,KAAKV,uBAGnB,wBAAQW,KAAK,SAAb,gC,GAtC0BE,aCcnBC,EAdM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAIA,EAASC,OAAS,EAElB,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACZ,+BACGD,EADH,KACWC,IADFmB,QAMH,uDC0CDC,E,4MA/CbtB,MAAQ,CAAEkB,SAAU,GAAIjB,KAAM,I,EAoB9BU,WAAa,YAAsB,IAAnBV,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpB,EAAKI,UAAS,gBAAGY,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBACHA,GADG,CAEN,CACEjB,KAAMA,EACNC,MAAOA,EACPmB,GAAIE,sB,uDAOV,OACE,8BACE,eAAC,EAAD,CAAS1B,MAAO,YAAhB,UACE,cAAC,EAAD,CAAMc,WAAYE,KAAKF,aACvB,cAAC,EAAD,CAASd,MAAO,WAAhB,SACE,cAAC,EAAD,CAAcqB,SAAUL,KAAKb,MAAMkB,sB,GAxCvBF,aCGTQ,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9103994.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: 'Иван',\r\n    phone: '+380951697398',\r\n  };\r\n\r\n  handleInputChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            value={this.state.phone}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst ContactsList = ({ contacts }) => {\r\n  if (contacts.length > 0) {\r\n    return (\r\n      <ul>\r\n        {contacts.map(({ id, name, phone }) => (\r\n          <li key={id}>\r\n            {name}: {phone}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else return <p>Contact list is empty</p>;\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Section from '../Section';\r\nimport Form from '../Form';\r\nimport ContactsList from '../ContactsList';\r\n\r\nclass Phonebook extends Component {\r\n  state = { contacts: [], name: '' };\r\n\r\n  // testContacts = [\r\n  //   {\r\n  //     name: 'Cat',\r\n  //     phone: '01',\r\n  //     id: 'id-1',\r\n  //   },\r\n  //   {\r\n  //     name: 'Dog',\r\n  //     phone: '02',\r\n  //     id: 'id-2',\r\n  //   },\r\n  //   {\r\n  //     name: 'Fox',\r\n  //     phone: '03',\r\n  //     id: 'id-3',\r\n  //   },\r\n  // ];\r\n\r\n  addContact = ({ name, phone }) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [\r\n        ...contacts,\r\n        {\r\n          name: name,\r\n          phone: phone,\r\n          id: uuidv4(),\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title={'Phonebook'}>\r\n          <Form addContact={this.addContact} />\r\n          <Section title={'Contacts'}>\r\n            <ContactsList contacts={this.state.contacts} />\r\n          </Section>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import Phonebook from './Component/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Phonebook />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}